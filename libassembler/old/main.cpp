#include <stdio.h>
#include <windows.h>
#define CHARM_INTERNAL_FUNC	__stdcall
#define INLINE			__inline
#include "MacroSupport.h"
extern "C"
{
	#include ".\liblogic\logic.h"
};
#include "Assembler.h"
#include "Assembler.cpp"
int main()
{
	ASM_SOURCE Source;

	ASM_TOKEN TokenList[100] = {
		ASMER_TK_KW_ADDR_LAB, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_PUSH, ASMER_TK_REG_EBP, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_REG_EBP, ASMER_TK_REG_ESP, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_SUB, ASMER_TK_REG_ESP, ASMER_TK_KW_IMMEDIATE32, ASMER_TK_KW_LINEND,
		ASMER_TK_KW_ADDR_LAB, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_KW_DWORD_PTR, ASMER_TK_REG_EBP, ASMER_TK_KW_SUB, ASMER_TK_KW_DISPLACEMENT8, ASMER_TK_KW_MEMEND, ASMER_TK_KW_IMMEDIATE32, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_KW_DWORD_PTR, ASMER_TK_REG_EBP, ASMER_TK_KW_SUB, ASMER_TK_KW_DISPLACEMENT32, ASMER_TK_KW_MEMEND, ASMER_TK_KW_IMMEDIATE32, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_REG_ESP, ASMER_TK_REG_EBP, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_KW_DWORD_PTR, ASMER_TK_KW_ADDR_LAB, ASMER_TK_KW_MEMEND, ASMER_TK_KW_IMMEDIATE32, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_POP, ASMER_TK_REG_EBP, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_RET, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_JMP, ASMER_TK_KW_ADDR_LAB, ASMER_TK_KW_LINEND,
		ASMER_TK_KW_ADDR_VALUE_LAB, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_KW_DWORD_PTR, ASMER_TK_REG_EBP, ASMER_TK_KW_SUB, ASMER_TK_KW_DISPLACEMENT32, ASMER_TK_KW_MEMEND, ASMER_TK_KW_IMMEDIATE32, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_REG_ESP, ASMER_TK_REG_EBP, ASMER_TK_KW_LINEND,
		ASMER_TK_INST_MOV, ASMER_TK_REG_EBP, ASMER_TK_KW_ADDR_VALUE_LAB, ASMER_TK_KW_LINEND,
		ASMER_TK_END
	};
	DWORD ConstList[100] = {
		0x1000, 0x04, 0x1000, 0x1000, 0x2000, 0x1234, 0x1111111, 0xFFFFFFEE
	};
	CHAR *SymbolList[100] = {
		"label1","label2", "label2","label1","label3","label3"
	};
	Source.pAsmTokenList = TokenList;
	Source.pConstList = ConstList;
	Source.pSymbolList = SymbolList;
	DWORD dwSize = 0;
	LPBYTE Code = Assembler(&dwSize, &Source, 0x0400000);//映射的地址是随便给出的
	return 1;
}